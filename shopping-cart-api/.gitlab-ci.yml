variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  REGISTRY_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

stages:
  - build
  - test
  - package
  - deploystaging
  - deployprod

build:
  image: gradle:alpine
  stage: build
  script: gradle --build-cache bootjar
  artifacts:
    paths:
      - build
      - .gradle

test:
  image: gradle:alpine
  stage: test
  script:
    - gradle test jacocoTestReport
    - cat build/reports/jacoco/test/html/index.html | grep -o 'Total[^%]*%'
  artifacts:
    paths:
      - build
      - .gradle

docker-build:
  image: docker:latest
  services:
    - docker:dind
  stage: package
  script:
    - docker build -t $REGISTRY_IMAGE .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $REGISTRY_IMAGE

pages:
  stage: deploystaging
  dependencies:
    - test
  script:
    - mv build/reports/jacoco/test/html/ public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master

k8s-deploy-staging:
  image: google/cloud-sdk
  stage: deploystaging
  script:
    - echo "$GOOGLE_KEY" > key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set compute/zone $CLUSTER_ZONE
    - gcloud config set project $GCP_PROJECT_NAME
    - gcloud container clusters get-credentials $CLUSTER_NAME
    - kubectl create namespace qa 2>/dev/null || echo "namespace qa already exist"
    - kubectl config set-context --current --namespace=qa
    - kubectl delete secret shopping-cart-api-registry 2>/dev/null || echo "secret does not exist"
    - kubectl create secret docker-registry shopping-cart-api-registry --docker-server=https://registry.gitlab.com --docker-username=$REGISTRY_TOKEN --docker-password=$REGISTRY_PASSWD
    - kubectl apply -f deployment.yml
    - kubectl apply -f deployment-db.yml
    - kubectl set image deployment/shopping-cart-api shopping-cart-api=$REGISTRY_IMAGE

  environment:
    name: staging
    url: http://staging/

k8s-deploy-prod:
  image: google/cloud-sdk
  stage: deployprod
  script:
    - echo "$GOOGLE_KEY" > key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set compute/zone $CLUSTER_ZONE
    - gcloud config set project $GCP_PROJECT_NAME
    - gcloud container clusters get-credentials $CLUSTER_NAME
    - kubectl create namespace prod 2>/dev/null || echo "namespace prod already exist"
    - kubectl config set-context --current --namespace=prod
    - kubectl delete secret shopping-cart-api-registry 2>/dev/null || echo "secret does not exist"
    - kubectl create secret docker-registry shopping-cart-api-registry --docker-server=https://registry.gitlab.com --docker-username=$REGISTRY_TOKEN --docker-password=$REGISTRY_PASSWD
    - kubectl apply -f deployment.yml
    - kubectl apply -f deployment-db.yml
    - kubectl set image deployment/shopping-cart-api shopping-cart-api=$REGISTRY_IMAGE
  when: manual
  environment:
    name: production
    url: http://production/
